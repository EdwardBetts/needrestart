#!/usr/bin/perl

# needrestart - Restart daemons after library updates.
#
# Authors:
#   Thomas Liske <thomas@fiasko-nw.net>
#
# Copyright Holder:
#   2013 (C) Thomas Liske [http://fiasko-nw.net/~thomas/]
#
# License:
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this package; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#

use Getopt::Std;

use warnings;
use strict;

my %nrconf = (
    procfs => '/proc',
    verbose => 0,
    hook_d => '/etc/needrestart/hook.d',
);

our $opt_c = '/etc/needrestart/needrestart.conf';
our $opt_v;
getopts('c:v');

die "ERROR: Could not read config file '$opt_c'!\n" unless(-r $opt_c);

eval `cat "$opt_c"`;
die "\n" if($@);

die "Hook directory '$nrconf{hook_d}' is invalid!\n" unless(-d $nrconf{hook_d});

warn "WARNING: This program should be run as root!\n" if($< != 0);

# inspect only pids
for my $pid (map {/^$nrconf{procfs}\/(\d+)$/ ? ($1) : ()} <$nrconf{procfs}/*>) {
    # read file mappings (Linux 2.0+)
    open(HMAP, '<', "$nrconf{procfs}/$pid/maps") || next;
    my $restart = 0;
    while(<HMAP>) {
	chomp;
	my ($maddr, $mperm, $moffset, $mdev, $minode, $path) = split(/\s+/);

	# skip special handles and non-executable mappings
	next unless($minode != 0 && $path ne '' && $mperm =~ /x/);

	# get on-disk info
	my ($sdev, $sinode) = stat($path);
	last unless(defined($sinode));
	$sdev = sprintf("%02x:%02x", $sdev >> 8, $sdev & 0xff);

	# compare maps content vs. on-disk
	if($mdev ne $sdev || $minode ne $sinode) {
	    $restart++;
	    last;
	}
    }
    close(HMAP);

    # restart needed?
    next unless($restart);

    # get executable (Linux 2.2+)
    my $bin = readlink("$nrconf{procfs}/$pid/exe");
    next unless(defined($bin));

    print "$bin\n";
}
